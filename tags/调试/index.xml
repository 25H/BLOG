<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>调试 on ARAE</title><link>https://blog.arae.cc/tags/%E8%B0%83%E8%AF%95.html</link><description>Recent content in 调试 on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 13 Oct 2021 17:56:49 +0800</lastBuildDate><atom:link href="https://blog.arae.cc/tags/%E8%B0%83%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>Arae Package 简单有索引的包构建工具</title><link>https://blog.arae.cc/post/25840.html</link><pubDate>Wed, 13 Oct 2021 17:56:49 +0800</pubDate><guid>https://blog.arae.cc/post/25840.html</guid><description>Arae Package Arae 是一种简单的文件归档格式，它的工作方式类似于 Asar ，可以将所有文件连接在一起而不进行压缩，同时支持随机访问。 特征 支持随机访问 使用 JSON 存储文件信息 支持文件加密 支持大文件 (支持tb级大文件) 高速解析 (结构简单的tb级文件小于100ms) 支持文件合并 支持文件分片 使用简单 部分截图 下载 蓝奏 : https://wwa.lanzoui.com/injlBvats3g 赞助 点击进入赞助页 &amp;gt;&amp;gt; 备注 玩electron突然发现易语言的常量、图片存东西太麻烦，就搞了这东西(懒使我变强🤣)</description></item><item><title>易语言软件反调试大法——六种反调试方法，总有一种适合“它”！</title><link>https://blog.arae.cc/post/25709.html</link><pubDate>Thu, 14 Jul 2016 10:43:20 +0800</pubDate><guid>https://blog.arae.cc/post/25709.html</guid><description>备注：写成子程序是为了方便在应用时插到代码段中，真正使用时请务必插入（最好分段插入）到程序代码中，否则几乎形同虚设。 .版本 2 .子程序 第一法_内存分配反调试, 逻辑型 .参数 最小值, 整数型 .参数 最大值, 整数型 .局部变量 min, 整数型 .局部变量 max, 整数型 GetProcessWorkingSetSize (GetCurrentProcess (), min, max) &#39; 输出调试文本 (min, max) 返回 (min ≠ 最小值 或 max ≠ 最大值) .子程序 第二法_子窗口反调试 EnumChildWindows (GetDesktopWindow (), 到整数 (&amp;amp;子窗口监控子程序), 0) .子程序 第三法_时间差反调试, 逻辑型 .局部变量 ctt, FILETIME .局部变量 ett, FILETIME .局部变量 ktt, FILETIME .局部变量 utt, FILETIME .局部变量 stt, SystemTime .局部变量 ntt, SystemTime .局部变量 qtt, 双精度小数型 GetLocalTime (ntt) GetProcessTimes (GetCurrentProcess (), ctt, ett, ktt, utt) FileTimeToSystemTime (ctt, stt) qtt ＝ 到数值 (ntt.wSecond) × 1000 ＋ ntt.wMilliseconds － 到数值 (stt.wSecond) × 1000 － stt.wMilliseconds 返回 (qtt ＞ 300 或 qtt ＜ 0) .子程序 第四法_启动信息反调试, 逻辑型 .局部变量 启动信息, STARTUPINFO GetStartupInfo (启动信息) 返回 (启动信息.dwX ≠ 0 或 启动信息.dwY ≠ 0 或 启动信息.dwXCountChars ≠ 0 或 启动信息.dwYCountChars ≠ 0 或 启动信息.dwFillAttribute ≠ 0 或 启动信息.dwXSize ≠ 0 或 启动信息.dwYSize ≠ 0) .子程序 第五法_时间间隔反调试, 逻辑型 返回 (GetTickCount () － GetTickCount () ≠ 0) .子程序 第六法_检测调试器反调试, 逻辑型</description></item></channel></rss>