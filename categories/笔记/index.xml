<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>笔记 on ARAE</title><link>https://blog.arae.cc/categories/%E7%AC%94%E8%AE%B0.html</link><description>Recent content in 笔记 on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 11 Nov 2021 19:56:32 +0800</lastBuildDate><atom:link href="https://blog.arae.cc/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>Maye Lite 配置项</title><link>https://blog.arae.cc/post/25841.html</link><pubDate>Thu, 11 Nov 2021 19:56:32 +0800</pubDate><guid>https://blog.arae.cc/post/25841.html</guid><description>配置项类型需完全匹配，且保证json可正常解析，否则会发生无法预知错误(懒得写容错-.-) ！修改配置前需保证MayeLite完全退出，且当前编辑文件为最新版，并保证编码为utf-8 配置文件路径 MayeLite运行目录\cfg.json IsDebug bool 开启调试功能，如非必要请勿开启，此功能会造成运行缓慢与一些未知问题。 x int 窗口相对于主屏幕的x距离 y int 窗口相对于主屏幕的y距离 cx int 窗口的宽度 cy int 窗口的高度 HotKey string 唤醒快捷键，如：Alt+Space theme string 主题文件，theme目录下的css，需填写完整名称(如使用默认主题直接删除此项即可)，如：dark.css NotifyIconType unsigned int 托盘图标类型 -1 隐藏 0 彩色 (默认) 1 白色 2 黑色 TabHoverSwitchDelay unsigned int Tab悬停切换延时 0 关闭 &amp;gt;0 开启(毫秒)，推荐50+ IsNotifyIconHoverShow bool 是否开启托盘悬停唤醒。 也许还会有更多&amp;hellip;</description></item><item><title>Chrome的密码管理用着太麻烦，开个新坑&#34;NextPass&#34;</title><link>https://blog.arae.cc/post/25839.html</link><pubDate>Thu, 22 Jul 2021 23:51:22 +0800</pubDate><guid>https://blog.arae.cc/post/25839.html</guid><description>Chrome的密码管理用着太麻烦，其他的怕有安全问题，就想着自己弄个，对没错，我是被迫的(¬_¬ ) 至于名字就暂定 NextPass 2021/06/15：开坑，建文件夹。 2021/07/03：找了一圈ui框架，还是决定跟maye一样。。。 2021/07/10：建立文件/文件夹：index.html; main.less; main.js; 2021/07/15：借鉴了一圈同类软件，决定用三栏布局。 2021/07/22：闲着没事把布局撸出来了，目前暂定4级分类。 2021/07/22 NextPass 布局图 （展开/收缩） 2021/07/23：第二栏完成，一天一个真轻松🤦‍♂️ 2021/07/23 NextPass 布局图 （展开/收缩）</description></item><item><title>Maye 修改分类位置在顶部/底部时的宽度</title><link>https://blog.arae.cc/post/25838.html</link><pubDate>Sat, 20 Mar 2021 20:12:11 +0800</pubDate><guid>https://blog.arae.cc/post/25838.html</guid><description>在使用的 sikn/***.less 文件内加入 /* * 将 &#39;100&#39; 替换为你要设置的宽度 */ .container.type-top, .container.type-bottom { .list-tab-item { width: 100px !important; } }</description></item><item><title>适用于 Maya 的搜索引擎收集</title><link>https://blog.arae.cc/post/25835.html</link><pubDate>Sat, 02 Jan 2021 15:01:03 +0800</pubDate><guid>https://blog.arae.cc/post/25835.html</guid><description>相关文档：Maya 自定义搜索引擎 内置搜索引擎： bd|百度|true||https://www.baidu.com/s?wd=%s b|必应|true||https://cn.bing.com/search?q=%s g|谷歌|true||https://www.google.com.hk/search?q=%s d|DuckDuckGo|true||https://duckduckgo.com/?q=%s 本地： e|Everything|false||C:\Program Files\Everything\Everything.exe@@-s &amp;quot;%s&amp;quot; 综合: wx|微信|true||http://weixin.sogou.com/weixin?type=2&amp;amp;query=%s tt|头条|true||https://www.toutiao.com/search/?keyword=%s sg|搜狗|true||https://www.sogou.com/web?query=%s 360|360搜索|true||https://www.so.com/s?q=%s y|Yandex|true||https://yandex.com/search/?text=%s kk|夸克|true||https://quark.sm.cn/s?q=%s dj|多吉|true||https://www.dogedoge.com/results?q=%s mj|秘迹|true||https://mijisou.com/search?q=%s m|Magi|true||https://magi.com/search?fr=opensearch&amp;amp;q=%s m</description></item><item><title>Maye 自定义搜索引擎</title><link>https://blog.arae.cc/post/25834.html</link><pubDate>Tue, 29 Dec 2020 17:33:16 +0800</pubDate><guid>https://blog.arae.cc/post/25834.html</guid><description>相关文档：适用于 Maya 的搜索引擎收集 例子 key|搜索|true|so1|https://www.baidu.com/s?wd=%s key1|搜索1|||https://www.baidu.com/s?wd=%s key2|搜索2||so3|http://127.0.0.1/12345/?%s 调用本地程序: test|本地测试|||C:\Users\...\Desktop\test.exe@@%s 参数说明 位置 参数名 可否为空 可用值 说明 备注 1 key false - 调用关键词 - 2 name false - 显示名称 - 3 encode true true/false 是否对关键词进行编码 - 4 ico true - 显示图标 无需输入后缀，文件必须为png格式，位置：./cache/search/ 5 url false - 提交地址 用&amp;quot;%s&amp;quot;代替搜索字词，本地路径@@分隔路径与运行参数</description></item><item><title>Win8.1&#43; 动态DPI获取</title><link>https://blog.arae.cc/post/25833.html</link><pubDate>Sat, 26 Dec 2020 00:46:47 +0800</pubDate><guid>https://blog.arae.cc/post/25833.html</guid><description>GetDeviceCaps这个不知道从哪个版本开始就获取不到准确的DPI了(修改后未注销)，特意跑去翻文档重写了一份。 .版本 2 .子程序 getDpi, 整数型, 公开, 获取Dpi .局部变量 fpFun, 整数型 .局部变量 hWnd, 整数型 .局部变量 hdc .局部变量 hMonitor .局部变量 nDpiX .局部变量 nDpiY hWnd ＝ GetDesktopWindow () &#39; ； win8.1+ fpFun ＝ GetProcAddress (Shcore, “GetDpiForMonitor”) .如果真 (fpFun ＞ 0) hMonitor ＝ MonitorFromWindow (hWnd, #MONITOR_DEFAULTTOPRIMARY) .如果真 (GetDpiForMonitor (hMonitor, 0, nDpiX, nDpiY) ＝ #S_OK) 返回 (nDpiX) .如果真结束 .如果真结束 &#39; ；低版本 hdc ＝ GetDC (hWnd) nDpiX ＝ GetDeviceCaps (hdc, #LOGPIXELSX) &#39; nDpiY ＝ GetDeviceCaps (hdc, #LOGPIXELSY) ReleaseDC (hWnd, hdc) 返回 (nDpiX)</description></item><item><title>解决因 管理员运行 无法接收 WM_DROPFILES 消息问题</title><link>https://blog.arae.cc/post/25832.html</link><pubDate>Fri, 11 Dec 2020 16:55:10 +0800</pubDate><guid>https://blog.arae.cc/post/25832.html</guid><description>这毛病好像时从 Vista 开始的，好像跟安全权限机制体系有关。 .版本 2 .DLL命令 ChangeWindowMessageFilterEx, 逻辑型, &amp;quot;user32&amp;quot;, &amp;quot;ChangeWindowMessageFilterEx&amp;quot; .参数 hwnd, 整数型 .参数 message, 整数型 .参数 action, 整数型 .参数 pChangeFilterStruct, 整数型 .DLL命令 ChangeWindowMessageFilter, 逻辑型, &amp;quot;user32&amp;quot;, &amp;quot;ChangeWindowMessageFilter&amp;quot; .参数 message .参数 dwFlag .版本 2 .子程序 _ChangeMessageFilter .局部变量 hDllLib .局部变量 fpFun hDllLib ＝ LoadLibraryA (“user32.dll”) fpFun ＝ GetProcAddress (hDllLib, “ChangeWindowMessageFilterEx”) .如果真 (fpFun ＞ 0) ChangeWindowMessageFilterEx (var.hWnd, #WM_DROPFILES, 1, 0) ChangeWindowMessageFilterEx (var.hWnd, #WM_COPYDATA, 1, 0) ChangeWindowMessageFilterEx (var.hWnd, #SPI_SETANIMATION, 1, 0) ChangeWindowMessageFilterEx (var.hWnd, #WM_COPYGLOBALDATA, 1, 0) .如果真结束 FreeLibrary (hDllLib)</description></item><item><title>Maya 新玩法：通过 CSS 设置背景图</title><link>https://blog.arae.cc/post/25831.html</link><pubDate>Tue, 01 Dec 2020 06:17:22 +0800</pubDate><guid>https://blog.arae.cc/post/25831.html</guid><description>在使用的 sikn/***.less 文件内加入 /* * 将 &#39;C:/1.png&#39; 替换为你的图片路径 */ .container { background-image: url(&#39;file:///C:/1.png&#39;); background-repeat: no-repeat; background-position: center; background-size: cover; background-attachment: fixed; } /* * 这里推荐通过调整背景颜色透明度实现，而非这种方式 */ .top, .left, .right { opacity: .7; } .search { opacity: .9; }</description></item><item><title>ETS2、ATS 1.37&#43; 音量配置解析</title><link>https://blog.arae.cc/post/25829.html</link><pubDate>Fri, 29 May 2020 17:51:00 +0800</pubDate><guid>https://blog.arae.cc/post/25829.html</guid><description>位置： \profiles\****\config_local.cfg \steam_profiles\****\config_local.cfg 数值： 名 默认 s_master_volume 1 主音量 s_truck_engine_volume 0.51 车头引擎音量 s_truck_exhaust_volume 0.67 车头排气音量 s_truck_effects_volume 0.8 车头效果音音量 s_truck_noise_volume 0.7 车头噪音音量 s_trailer_volume 0.62 挂车噪音音量 s_traffic_volume 0.76 交通音量 s_world_volume 0.5 环境音音量-1 s_ambient_volume 0.6 环境音音量-2 s_interior_volume 0.8 内部声音音量 s_radio_volume 0.5 电台音量 s_navigation_volume 0.5 语言导航音量 s_music_volume 0.5 音乐音量 s_ui_volume 0.5 游戏声音音量 s_ui_music_volume 0.05 菜单界面的音乐音量 s_voiceover_volume 0.05 启动画面（实测修改无效）</description></item><item><title>迫于Rolan越来越“难用”我决定自己写个</title><link>https://blog.arae.cc/post/25828.html</link><pubDate>Mon, 25 Nov 2019 17:03:37 +0800</pubDate><guid>https://blog.arae.cc/post/25828.html</guid><description>2019-12-01: 无意间翻出几年前的坑，占用小响应快是真的好用，现在这个一言不合就飙内存 （展开/收缩） 2019-11-29: 今天闲着没事套个壳发现看着几乎一样 2019-11-29 半成品图 （展开/收缩） 2019-11-25：因我现在用的版本出现只能双击启动程序的问题，就决定自己写个高仿版 但等界面写好后就想弃坑了 2019-11-25 半成品图 （展开/收缩）</description></item><item><title>欧卡2 &amp; 美卡 常用命令</title><link>https://blog.arae.cc/post/25827.html</link><pubDate>Wed, 04 Sep 2019 19:21:00 +0800</pubDate><guid>https://blog.arae.cc/post/25827.html</guid><description>单机 名称 参数 描述 g_set_skybox &amp;lt;skybox_idx&amp;gt; 设置天空 g_set_weather &amp;lt;weather_index&amp;gt; [i | f] 设置天气。weather_index0 - 晴天1 - 雨天i - 逐渐改变，f - 强制改变 g_set_time &amp;lt;时&amp;gt; [分] [remove_traffic] 设置时间。remove_traffic0 - false1 - true warp &amp;lt;speed&amp;gt; 设置游戏速度。 min: 0.0001; max: 60.0; 名称 类型 默认 配置 描述 g_traffic float 1.0 global 交通强度。0.0 - 禁用10.0 - 最大 g_bad_weather_factor float 0.07 profile 降雨概率。 g_income_factor float 1.0 profile 收益因子 (min: 0.0; max: 1.0; ) Documentation/Engine/Console/Commands Documentation/Engine/Configuration variables 在线 名称 描述 /fix 修复车辆</description></item><item><title>AMZ 扩展应用html配置接口</title><link>https://blog.arae.cc/post/25799.html</link><pubDate>Sat, 08 Dec 2018 14:06:19 +0800</pubDate><guid>https://blog.arae.cc/post/25799.html</guid><description>自动保存 自动报错目前仅支持 input textarea select 基础标签。 使用方法： &amp;lt;input type=&amp;quot;text&amp;quot; amz-autosave amz-name=&amp;quot;背景色&amp;quot; value=&amp;quot;#fff&amp;quot; /&amp;gt; 其中 amz-autosave 属性代表开启自动保存功能，amz-name=&amp;quot;&amp;quot; 属性为保存的键名。 其他接口 注：动作参数不区分大小写。 // 定义通讯接口，其中参数一必须为 &#39;api&#39; var SendMsg = function (p1, p2, p3, p4, p5) { return parent.SendMsg(p1, p2, p3, p4, p5); }; /** * 获取AMZ版本 * * AMZver * Major * Minor * Patch * Tag * Name */ // 获取AMZ版本,例子 var AMZver = SendMsg(&#39;API&#39;, &#39;AMZver&#39;, &#39;Name&#39;); // AMZ 完整字符串版本 如：3.1.1_Beta /** * 读写配置项 * * Save * 配置项名 * 写入值( \n会被替换为 #换行符# ) * * Read ( #换行符# 会被替换为\n ) * 配置项名 * 默认值 */ // 读写配置项,例子 // 写配置项 SendMsg(&#39;API&#39;, &#39;Save&#39;, &#39;dataJson&#39;, JSON.stringify(dataJson)); // 读配置项 var dataJson = SendMsg(&#39;API&#39;, &#39;Read&#39;, &#39;dataJson&#39;, &#39;&#39;); _ 更新日期：2018-12-8 _</description></item><item><title>AMZ 扩展应用文件命名规范</title><link>https://blog.arae.cc/post/25798.html</link><pubDate>Fri, 09 Nov 2018 13:46:01 +0800</pubDate><guid>https://blog.arae.cc/post/25798.html</guid><description>dll插件命名 如目录名为mz.r4.compile则将dll插件文件命名为mz.r4.compile.dll html配置命名 如目录名为mz.r4.compile则将dll插件配置文件命名为mz.r4.compile.html 小提示 默认配置文件名为Config.ini</description></item><item><title>AMZ (API)公共扩展插件编写接口</title><link>https://blog.arae.cc/post/25797.html</link><pubDate>Fri, 21 Sep 2018 23:23:22 +0800</pubDate><guid>https://blog.arae.cc/post/25797.html</guid><description>由 AMZ 预定义或二次封装的一些接口，balabalabala&amp;hellip; .版本 2 .DLL命令 amz_api_OpenSet, , &#34;AMZ.fne&#34;, &#34;amz_api_OpenSet&#34;, 公开, 打开 设置 .参数 szGuid, 文本型, , 插件的GUID，可空 .DLL命令 amz_api_OutText, , &#34;AMZ.fne&#34;, &#34;amz_api_OutText&#34;, 公开, 向输出框发送文本 .参数 szStr, 文本型 .DLL命令 amz_api_OutText_1, , &#34;AMZ.fne&#34;, &#34;amz_api_OutText_1&#34;, 公开, 向输出框发送文本，无版权 .参数 szStr, 文本型 .DLL命令 amz_api_OutTextError, , &#34;AMZ.fne&#34;, &#34;amz_api_OutTextError&#34;, 公开, 向输出框发送文本，带错误提示声音 .参数 szStr, 文本型 .DLL命令 amz_api_OutTextEmpty, , &#34;AMZ.fne&#34;, &#34;amz_api_OutTextEmpty&#34;, 公开, 清空输出框内容 .DLL命令 amz_api_GetRunFunc, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetRunFunc&#34;, 公开, 获取 IDE功能函数地址 .DLL命令 amz_api_GetHwnd, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetHwnd&#34;, 公开, 取易语言自身控件句柄，后期创建的可能获取不到，如果出现重复的ID类型可填写上层ID类名进行二次获取 .参数 nIDDlgItem, 整数型, , 控件ID .参数 szClassName, 文本型, , 类名，可空 .DLL命令 amz_api_GetHwnd_OutText, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetHwnd_OutText&#34;, 公开, 获取 输出框句柄 .DLL命令 amz_api_GetEhWnd, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetEhWnd&#34;, 公开, 获取 易语言主窗口句柄 .DLL命令 amz_api_GetPID, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetPID&#34;, 公开, 获取 易语言进程PID .DLL命令 amz_api_GetEver, 小数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetEver&#34;, 公开, 获取 易语言版本号 .DLL命令 amz_api_GetDir_E, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_E&#34;, 公开, 获取目录 易语言主目录 .DLL命令 amz_api_GetDir_AMZ, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_AMZ&#34;, 公开, 获取目录 AMZ目录 .DLL命令 amz_api_GetDir_Plugin, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_Plugin&#34;, 公开, 获取目录 自身插件目录 .参数 szGuid, 文本型, , 插件的G</description></item><item><title>AMZ 通知消息代码</title><link>https://blog.arae.cc/post/25796.html</link><pubDate>Tue, 21 Aug 2018 16:19:37 +0800</pubDate><guid>https://blog.arae.cc/post/25796.html</guid><description>通知消息代码是沿用自 EIDEA 2.X 的事件处理方式，可避免过多不必要的导出函数与一些未知错误。 AMZ_EVENT_START 代码：10001 参数： 一：易语言窗口句柄 二：自身进程PID 三：主线程ID 返回： NULL 说明： 「AMZ事件_启动」初始化插件（仅在首次启动时加载类似于 &amp;ldquo;_启动子程序&amp;rdquo; ） AMZ_EVENT_READY 代码：10002 参数： 无 返回： NULL 说明： 「AMZ事件_准备就绪」IDE首次准备就绪时，触发此事件 AMZ_EVENT_MSG_ARRIVE 代码：10003 参数： 一：收到的消息(可用 &amp;ldquo;指针到文本()&amp;rdquo; 转换为文本型) 返回： NULL 说明： 「AMZ事件_收到消息」收到消息，配合 &amp;ldquo;amz_api_IPC_SendMsg()&amp;rdquo; 命令可以自由向其他E程序插件发送消息，但发送端不会收到消息。 AMZ_EVENT_CONFIG_CHANGE 代码：10004 参数： 无 返回： NULL 说明： 「AMZ事件_配置被更改」配置被更改，当用户更改了设置时，触发此事件 AMZ_EVENT_CLICK_MENU 代码：10005 参数： 一：菜单数值 返回： NULL 说明： 「AMZ事件_菜单被点击」菜单被点击事件时，触发此事件 AMZ_EVENT_KEYBOARD 代码：10006 参数： 一：键代码 二：按键状态 (1=按下，2=放开,3=单击) 返回： -1拦截，否则放行 说明： 「AMZ事件_操作键盘」当用户操作键盘时，触发此事件 AMZ_EVENT_TOOLS_ITEM_CLICK 代码：10007 参数： 一：数值 返回： NULL 说明： 「A</description></item><item><title>AMZ 扩展应用目录命名规范</title><link>https://blog.arae.cc/post/25795.html</link><pubDate>Mon, 20 Aug 2018 21:43:49 +0800</pubDate><guid>https://blog.arae.cc/post/25795.html</guid><description>扩展应用目录命名需要遵循一定的规则，如果违反这些规则，可能会造成扩展应用无法正常载入。 规范 目录名中允许数字、字母、短横线-、下划线_、小数点.，但尽量不用出现其他字符（如空格、中文字符等），同时建议字母全部统一使用小写字母。 命名参数 参数 必填 默认值 说明 mz. true - 命名空间，必须存在于目录名最前面，否则不会被加载。 R1. ~ R4. false R4. 优先级，其中 R1~R2 启动时加载，R3~R4 就绪后加载。 栗子 如 智能编译 插件将其目录命名为 mz.R3.missing.compile。 mz. AMZ命名空间 R3. 优先级「中下」 （大小写随意） missing. 开发者名，这里可以随意定义，如 arae.cc. 将其定义为网址，或不定义 （你想怎样就怎样..） compile 插件名 &amp;lt;!-- 正确 --&amp;gt; mz.R4.arae.cc.pluginname mz.R4.missing.pluginname mz.r4.arae.cc.plugin_name mz.r4.missing.plugin_name mz.r4.plugin_name mz.plugin_name &amp;lt;!-- 错误 --&amp;gt; R4.mz.arae.cc.pluginname mz.R4.arae.cc.pluginname. mz_R4_missing_pluginname mz-r4-arae.cc.plugin_name r4.missing.plugin_name r4-plugin_name plugin_name &amp;lt;!-- 如果你想给自己找点乐，那就随便了 --&amp;gt; 小提示 如果插件目录名前面没有 mz. 这两个迷一样的字符，那么你的插件也可能也会是个迷&amp;hellip; 不是特殊情况尽量少用 R1~R2 晚一点其实也不错的 目录名不要太长也不要太短</description></item><item><title>几个SteamKEY，攒了好长时间</title><link>https://blog.arae.cc/post/25786.html</link><pubDate>Mon, 09 Apr 2018 20:59:33 +0800</pubDate><guid>https://blog.arae.cc/post/25786.html</guid><description>几个SteamKEY，攒了好长时间，一大堆廉价游戏+DLC@pp{滑稽} ① == [1~3] ② == [4~6] ③ == [7~9] ④ == [A~C] ③IAL②-FBKFT-86①E8 BML①X-NNVTE-①GEHZ 4②WWP-VJQCL-00X②Y EBLK③-TBIEA-RA0②E Y①4DV-D03HN-JQG②Z PHBZ②-LRZQB-LB①LC C7Y①0-PZA27-K③7VT XE②BM-TQ④RK-NMGQB ARC①6-YS56H-J④6SV 80④0W-5③XBY-Y①TMH C③SFB-TW②3C-HHK④J</description></item><item><title>HTTP协议状态码</title><link>https://blog.arae.cc/post/25777.html</link><pubDate>Fri, 02 Mar 2018 19:09:22 +0800</pubDate><guid>https://blog.arae.cc/post/25777.html</guid><description>HTTP状态码 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头(server header)用以响应浏览器的请求。 HTTP状态码的英文为HTTP Status Code。 1xx 信息/临时响应 表示临时响应并需要请求者继续执行操作的状态代码。 这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。 100 Continue 状态：继续 说明：请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。 客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。 101 Switching Protocols 状态：切换协议 说明：请求者已要求服务器切换协议，服务器已确认并准备切换。 服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不</description></item><item><title>Win10提示威胁服务已经停止,立即重启的解决方法</title><link>https://blog.arae.cc/post/25770.html</link><pubDate>Wed, 10 Jan 2018 22:59:50 +0800</pubDate><guid>https://blog.arae.cc/post/25770.html</guid><description>昨天手动将win10升级到1709，内部版本为16299.125。自带的杀毒软件Windows defender安全中心提示威胁服务已经停止,立即重启。病毒防护也无法启用，如图所示，点击立即重新启动，显示 发生未知错误 。虽然平常整个电脑管家啥的，但就稳定性还是系统自带的好，加上微软这几年的不断努力，系统自带的杀毒软件也越来越完善了，虽然这些年没有查出什么威胁，只是不能运行，万一哪天遇到了，心里还是怕怕的。 于是找度娘度了一番，发现很多法子都是修改组策略的方法来启动，但我从未更改过相关设置，按提示点进去看了，却发现都是“未配置”状态。另外还有命令提示符的方法，试了无效。无奈之下，之好翻墙请来谷哥来帮忙，终于在微软社区找到了个解决办法： Win + R 输入：regedit 定位路径：HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender 查看是否存在DisableAntiSpyware这个键值，有就删掉。 按步骤修改好注册表，并重启，果然解决了，看来关键时候还是要找谷哥帮忙呀。</description></item><item><title>执行命令行说明</title><link>https://blog.arae.cc/post/25756.html</link><pubDate>Tue, 08 Nov 2016 08:35:02 +0800</pubDate><guid>https://blog.arae.cc/post/25756.html</guid><description>{p} = 相对于易语言根目录\AM\Cmd\，注意：后面带有 {f} = 当前编译出去的程序文件全路径 {hide} = 隐藏执行命令行执行的窗口，此标记必须放到第一行。 // = 屏蔽当前行的命令行，屏蔽后将不再执行此命令行。 命令例子： {hide} {p}upx.exe -1 {f} 命令例子说明： 1.隐藏执行窗口 2.执行upx压缩；-1为upx命令；{f}为编译文件路径。</description></item><item><title>EditPlus 注册码</title><link>https://blog.arae.cc/post/25719.html</link><pubDate>Fri, 15 Jul 2016 11:06:22 +0800</pubDate><guid>https://blog.arae.cc/post/25719.html</guid><description>EditPlus 是一款功能强大的文字处理软件。它可以充分的替换记事本，它也提供网页作家及程序设计师许多强悍的功能。支持 HTML、CSS、PHP、ASP、Perl、C/C++、Java、JavaScript、VBScript 等多种语法的着色显示。程序内嵌网页浏览器，其它功能还包含 FTP 功能、HTML 编辑、URL 突显、自动完成、剪贴文本、行列选择、强大的搜索与替换、多重撤销/重做、拼写检查、自定义快捷键，等等&amp;hellip; 用户名：咲音 注册码：E409-14838-C2955-87422-F8968 用户名：Missing丶咲音 注册码：6509-69890-ED8EF-173E4-2AA4F 用户名：exiaoyin 注册码：8290C-849B8-5CF3A-E3CAD-825ED 用户名：freeuser 注册码：375AD-12490-3F1C9-72FF8-43471 用户名：EditPlus 注册码：72938-20D58-9379C-18419-405E2 用户名：572521856 注册码：51765-30C68-E6877-EDF0A-D2E5A 用户名：Administrator 注册码：8659D-4D490</description></item><item><title>Windows10关闭80端口占用</title><link>https://blog.arae.cc/post/25712.html</link><pubDate>Thu, 14 Jul 2016 11:48:47 +0800</pubDate><guid>https://blog.arae.cc/post/25712.html</guid><description>方案一 以管理员身份运行cmd;输入net stop http;如果提示是否真的需要停止这些服务,则选择“Y”;完成后输入:sc config http start=disabled 方案二 Ctrl+x, 然后选择“计算机管理”, 展开“服务和应用程序”, 找到“服务”; 找到“World Wide Web Publishing Service”, 双击打开后, 将启动类型改为手动, 更改服务状态为“停止”; 如果80端口仍然被占用, 则还需要停止以下几个服务: “SSDP Discovery”、“Print Spooler”、“HomeGroup Provider”、“Function Discovery Resource Publication”、“Function Discovery Provider Host”; 方案三 以管理员身份运行regedit打开键值: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\HTTP 在右边找到Start这一项,将其改为0重启系统, System进程不会占用80端口。</description></item><item><title>快速卸载Windows10预装app应用</title><link>https://blog.arae.cc/post/25711.html</link><pubDate>Thu, 14 Jul 2016 11:47:36 +0800</pubDate><guid>https://blog.arae.cc/post/25711.html</guid><description>其实很简单，微软已经准备了强大的工具，这就是PowerShell命令行窗口。用PowerShell命令行可以完全删除一些预装应用，注意是完全的删除，而不是仅仅屏蔽掉。 首先在开始菜单中找到它，右键点击，选择“以管理员身份运行”，然后想要卸载什么，就输入相应的命令。 OneNote： Get-AppxPackage OneNote | Remove-AppxPackage 3D： Get-AppxPackage 3d | Remove-AppxPackage Camera相机： Get-AppxPackage camera | Remove-AppxPackage 邮件和日历： Get-AppxPackage communi | Remove-AppxPackage 新闻订阅： Get-AppxPackage bing | Remove-AppxPackage Groove音乐、电影与电视： Get-AppxPackage zune | Remove-AppxPackage 人脉： Get-AppxPackage people | Remove-AppxPackage 手机伴侣（Phone Companion）： Get-AppxPackage phone | Remove-AppxPackage 照片： Get-AppxPackage photo | Remove-AppxPackage 纸牌游戏(还敢要钱的那货)： Get-AppxPackage solit | Remove-AppxPackage 录音机： Get-AppxPackage soundrec | Remove-AppxPackage Xbox： Get-AppxPackage xbox | Remove-AppxPackage 注意: 最后这个删除Xbox后会给出一大片错误提示信息，但其实已经删掉了，不必理会。</description></item><item><title>原创软件误报? 杀毒软件厂商误报分析提交地址</title><link>https://blog.arae.cc/post/25651.html</link><pubDate>Fri, 01 Jul 2016 05:07:50 +0800</pubDate><guid>https://blog.arae.cc/post/25651.html</guid><description>为了较快解决病毒误报问题，现将杀毒软件厂商误报分析提交地址整理如下. 1：瑞星安全中心： http://mailcenter.rising.com.cn/FileCheck/ 2：金山安全中心： http://www.ijinshan.com/virus_report/ 3：江民安全中心： http://virusup.jiangmin.com/ 4：赛门铁克安全响应中心 http://www.symantec.com/zh/cn/business/security_response/submitsamples.jsp 5：东方微点： http://service.micropoint.com.cn/mail.php 6：卡巴斯基病毒上报 http://www.kaspersky.com.cn/KL-Services/report-on.htm 7：360安全中心: http://sampleup.sd.360.cn/index.php 8：百度杀毒误报提交 http://anquan.baidu.com/shadu/shadu_form.html 9：QQ管家误报提交 http://guanjia.qq.com/trojan_false.html 360杀毒- 易语言软件开发者误报反馈专页 http://open.soft.360.cn/yyy_report.htm 提交一次，并不意味着只是不报你所提交的这个软件，而是这个特征码，也就是包含这个特征码的易程序都可能被解救。所以希望大家别误报了就自暴自弃的发帖抱怨，做出自己的行动。 卡巴斯基 newvirus@kaspersky.com 附件把被报毒的文件用zip压缩一下加进去，ZIP设置一个密码virus，避免被邮件服务器拦截 Avira(小红伞) http://analysis.avira.com/samples/ 选”可疑的误报” 可到论坛申请深层分析 http://forum.avira.com/wbb/index.php?page=Board&amp;amp;boardID=140 NOD32 samples@eset.com 压缩zip发送 BitDefender support@bitdefender.com 附件一定记得把被报毒的文件用zip压缩一下加进去，ZIP文件可以加密为 infected 赛门铁克（诺顿） https://submit.symantec.com/security_risks/dispute/ https://submit.symantec.com/false_positive/standard/ AVG virus@avg.com zip或rar压缩发送 AVAST virus@avast.com 麦咖啡 sophos https://secure.sophos.com/support/samples/ 提交zip压缩文件 F-PROT http://www.f-prot.com/virusinfo/false_positive_form.html 提交zip 如设置加密 请在Zip archive password写上压缩包密码 F-Secure http://www.f-secure.com/samples/index.html 需要注册，注册成功后直接在Submit a new sample那儿点submit 提交zip压缩文件 VBA32 newvirus@anti-virus.by 提交zip压缩文件 Panda 误报问题可以通过提</description></item><item><title>易语言静态编译链接器大全(为EIDE助手准备滴)</title><link>https://blog.arae.cc/post/25677.html</link><pubDate>Sat, 25 Jun 2016 14:44:50 +0800</pubDate><guid>https://blog.arae.cc/post/25677.html</guid><description>本文中的各个链接器收集于网络，汇总在一起，方便广大易友下载使用； 易语言的大部分支持库是 使用 vc6 编译， 所以， 推荐大家使用 vc6的链接器； 如果使用 其他链接库编译出现问题，或 编译出来的程序 运行存在问题，请试试更换 成 vc6 的链接器再次编译测试； 注意，其他链接器需要安装运行库才能运行，有打包一些，在对应的链接器里面 链接器名称说明： VC6核心库都是使用这个编译， 大部分库也是，推荐使用； VC7暂无说明，自行选择判断测试 VC8暂无说明，自行选择判断测试 VC9暂无说明，自行选择判断测试，带运行库 VC2010暂无说明，自行选择判断测试 VC2012暂无说明，自行选择判断测试 VC2013暂无说明，自行选择判断测试 VC2015_gatepase版本款链接器比较挑，开发端电脑必须是 Windows 7 SP1 或以上同时必须安装 VC2015 运行库（已带运行库） VC2015_hauntek版支持EXE和DLL静态编译，DLL公开的子程序名称必须是英文不能是中文！（否则无法识别公开的中文子程序名称而出现错误）支持系统核心支持库等,应用接口支持库不支持（其他支持库你们自行去测试），开发者电脑必须是 Windows 7 SP1 或以上，同时要安装 VC2015 x86 运行库，用户电脑则不需要，只要是 Windows</description></item><item><title>Markdown 语法整理</title><link>https://blog.arae.cc/post/25645.html</link><pubDate>Thu, 01 Jan 1970 01:00:00 +0800</pubDate><guid>https://blog.arae.cc/post/25645.html</guid><description>概述 Markdown 的目标是实现「易读易写」。 可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。 总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。 标题 Code # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 ####### h7 // 错误代码 ######## h8 // 错误代码 ######### h9 // 错误代码 ########## h10 // 错误代码 Demo 注：h1最大，h6最小 分级标题 Code 注：= - 最少可以只写一个，兼容性一般 一级标题 ====================== 二级标题 --------------------- Demo TOC Code 注：根据标题生成目录，兼容性一般 [TOC] Demo 引用 Code &amp;gt; hello world! Demo hello world! Code-2 [多行式] &amp;gt; hello world! hello world! hello world! 或者 &amp;gt; hello world! hello world! hello world! Demo-2 [多行式] 结果相同 hello world! hello world! hello world! Code-3 [多层嵌套] &amp;gt; aaaaaaaaa &amp;gt;&amp;gt; bbbbbbbbb &amp;gt;&amp;gt;&amp;gt; cccccccccc Demo-3 [多层嵌套] aaaaaaaaa bbbbbbbbb cccccccccc Code-4 [多层多个元素] 注：代码前 3个</description></item><item><title>Hello World</title><link>https://blog.arae.cc/post/25642.html</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate><guid>https://blog.arae.cc/post/25642.html</guid><description>}} -- 标题 /* * title 标题 */ {{&amp;lt; title title=&amp;quot;测试标题&amp;quot; &amp;gt;}} 提示框 /* * color 颜色值(1-4 默认1，可空) */ {{&amp;lt; alert color=&amp;quot;&amp;quot; &amp;gt;}}测试内容{{&amp;lt; /alert &amp;gt;}} 测试内容 测试内容 测试内容 测试内容 面板 /* * color 颜色值(1-4 默认1，可空) * title 标题(可空) */ {{&amp;lt; panel color=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot; &amp;gt;}}测试内容{{&amp;lt; /panel &amp;gt;}} 测试内容 标题 测试内容 标题 测试内容 标题 测试内容 标题 测试内容 展开/收缩 /* * title 标题(可空，默认&#39;展开/收缩&#39;) * show 默认显示(可空，默认false) */ {{&amp;lt; collapse title=&amp;quot;&amp;quot; show=&amp;quot;&amp;quot; &amp;gt;}}测试内容{{&amp;lt; /collapse &amp;gt;}} 展开/收缩 测试内容 标题 测试内容 标题 测试内容 隐藏文本 {{&amp;lt; hide &amp;gt;}}测试内容{{&amp;lt; /hide &amp;gt;}} 测试内容测试内容 下载按钮 /* * title 标题(可空，默认&#39;点击下载&#39;) * url 下载链接 */ {{&amp;lt; downbtn title=&amp;quot;下载&amp;quot; url=&amp;quot;&amp;quot; &amp;gt;}} &amp;nbsp;点击下载 &amp;nbsp;下载 表情 /* * name 名称 */ {{&amp;lt; face name=&amp;quot;滑稽&amp;quot; &amp;gt;}} 表情列表 表情测试 $(&#39;.rolla-face-list img&#39;).on(&#39;click&#39;, function () { layer.open({ type: 1, area: [&#39;390px&#39;, &#39;75px&#39;], title: false, closeBtn: 0, shadeClose: true, resize: false, scrollbar: false, content: &#39;}}\&#39; style=&#34;height: 35px; width: 350px; margin: 20px;&#34;&#39; }); });</description></item></channel></rss>